<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAACAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAATAAAAFgAAABVAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAWAAAAB0AAAAAAAAAAwAAAAAAAAA7AAAAOwAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIMAAAD/AAAA/AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA1AAAAAcAAAAAAAAAUAAA
        AP8AAAD/AAAANQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqgAA
        AP8AAAD2AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADWAAAAAAAA
        ACAAAADrAAAA/gAAAP8AAABWAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACdAAAA/wAAAOgAAABcAAAAVQAAAFcAAABXAAAAVwAAAFcAAABXAAAAVwAAAFcAAABWAAAAWQAA
        AB0AAAAAAAAAwQAAAP8AAAD4AAAA/wAAAFUAAAAAAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAADAAAAAAAAACIAAAClAAAAUwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAAIkAAAD/AAAA+QAAAPwAAAD/AAAAVQAAAAAAAAADAAAAAQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAAATAAAACwAAAAAAAAAGAAAAFgAAABUAAAAVAAAAFQAAABUAAAAVAAAAFQAA
        ABUAAAAVAAAAGAAAAAoAAABXAAAA/wAAAPsAAAD9AAAA/AAAAP8AAABhAAAAAgAAABYAAAAHAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAaAAAA0gAAAPIAAADsAAAA7gAAAO0AAADqAAAA6gAAAOoAAADqAAAA6gAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6QAAAPYAAAD+AAAA8gAAAKYAAAD+AAAA/AAAAPAAAADpAAAA8gAA
        ANIAAAAaAAAAAAAAAAIAAAAEAAAAAAAAAFQAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAP8AAAB7AAAAPwAAAP8AAAD9AAAA/wAA
        AP8AAAD8AAAA/wAAAFQAAAAAAAAABAAAAAQAAAAAAAAAVQAAAP8AAAD/AAAAxQAAAKMAAACpAAAAqAAA
        AKgAAACoAAAAqQAAAKkAAAClAAAAqwAAAKgAAACoAAAAqAAAAKcAAACuAAAAhAAAAAUAAAAFAAAAhAAA
        ALAAAACiAAAAxQAAAP8AAAD/AAAAVQAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABVAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAEAAAAAAAAABAAAAAAAAABVAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAA
        AFgAAAAAAAAACQAAAAcAAAAHAAAACAAAAAAAAACfAAAA/AAAAGcAAAAAAAAABwAAAAQAAAADAAAABgAA
        AAgAAAAEAAAABAAAAAcAAAAJAAAAAAAAAFgAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAA
        AP8AAAD/AAAAVQAAAAAAAAAEAAAAAAAAAAMAAAAAAAAARAAAAP8AAAD9AAAA/wAAAGgAAAAAAAAABQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVQAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAA
        AAAAAABWAAAA/wAAAP8AAABWAAAAAAAAADoAAABaAAAAVwAAAEwAAADDAAAA/wAAAPoAAAD7AAAA/wAA
        AGgAAAAAAAAAAAAAADcAAABaAAAAVQAAAFUAAABaAAAAOgAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAA
        AAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAEsAAAAmAAAA/wAAAP8AAAD+AAAA/wAAAPsAAAD/AAAA4AAA
        APMAAAD+AAAA/wAAAF8AAAA3AAAA/wAAAP8AAAD+AAAA/gAAAP8AAAD/AAAAJgAAAEsAAAD/AAAA/wAA
        AFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAARQAAAEYAAAD/AAAA+AAAAP4AAAD/AAAA/wAA
        AP8AAAA1AAAAXQAAAP8AAAD8AAAA+QAAAPEAAAD/AAAA+wAAAP4AAAD+AAAA+AAAAP8AAABGAAAARQAA
        AP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABGAAAARAAAAP8AAAD/AAAAjgAA
        AEoAAABcAAAANwAAAAAAAAAAAAAAaQAAAP8AAAD+AAAA/gAAAPwAAAD/AAAAhAAAAIQAAAD/AAAA/wAA
        AEQAAABGAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAEUAAABFAAAA/wAA
        AP8AAABVAAAAAAAAAAQAAAAAAAAAAQAAAAQAAAAAAAAAWgAAAKoAAADEAAAA/wAAAP8AAABFAAAARQAA
        AP8AAAD/AAAARQAAAEUAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAARQAA
        AEUAAAD/AAAA/wAAAFgAAAAAAAAABwAAAAMAAAAAAAAAAAAAAAMAAAAEAAAAAAAAAFUAAAD/AAAA/wAA
        AEgAAABIAAAA/wAAAP8AAABFAAAARQAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABFAAAARQAAAP8AAAD/AAAAWAAAAAAAAAAHAAAABAAAAAQAAAAEAAAAAQAAAAMAAAAAAAAAVQAA
        AP8AAAD/AAAASAAAAEgAAAD/AAAA/wAAAEUAAABFAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAEUAAABFAAAA/wAAAP8AAABVAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAAIAAAAaQAA
        AKYAAADFAAAA/wAAAP8AAABFAAAARQAAAP8AAAD/AAAARQAAAEUAAAD/AAAA/wAAAFYAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAARgAAAEQAAAD/AAAA/wAAAI4AAABLAAAAWAAAAFcAAABSAAAAbgAA
        ANwAAAD/AAAA/gAAAP4AAAD8AAAA/wAAAIQAAACEAAAA/wAAAP8AAABEAAAARgAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABFAAAARgAAAP8AAAD4AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADzAAAA8AAAAP8AAAD7AAAA/gAAAP4AAAD4AAAA/wAAAEYAAABFAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAE0AAAAqAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAP8AAAD2AAAAmAAAABwAAABDAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAKgAA
        AE0AAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAsAAAASQAA
        AEUAAABFAAAARQAAAEUAAABFAAAARgAAABQAAAAAAAAAAgAAAAAAAAAoAAAASQAAAEUAAABFAAAASQAA
        ACwAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABVAAAA/wAAAP8AAACOAAAATAAA
        AE0AAABFAAAARgAAAEUAAABFAAAARQAAAEYAAABFAAAATgAAAFoAAABXAAAAVwAAAEsAAABFAAAARgAA
        AEYAAABFAAAATQAAAEwAAACOAAAA/wAAAP8AAABVAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA+AAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD4AAAA/wAAAFYAAAAAAAAABAAAAAMAAAAAAAAANgAA
        AP8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD/AAAANgAAAAAAAAADAAAAAAAA
        AAEAAAAAAAAANwAAAFoAAABVAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABVAAAAWgAAADcAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAADAAAAAAAAAAAAAAAA6AAKT/L/pC/oAApPyAAEL8gACC+oAAglSJ+QIqIAAAVAAAACQAAAAkAA
        AAJC0ulCQhEAQkKgiUJCAGBCQAAAAkAAAAJAAgACQCEAAkAkQAJAIEACQCoAAkAAAAJAAAACQAAAAkIA
        oEJAAAACQAAAAkAAAAIgAAAES///0iAAAAQ=
</value>
  </data>
</root>